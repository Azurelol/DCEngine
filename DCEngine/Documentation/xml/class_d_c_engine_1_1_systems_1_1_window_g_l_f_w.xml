<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w" kind="class" language="C++" prot="public">
    <compoundname>DCEngine::Systems::WindowGLFW</compoundname>
    <basecompoundref refid="class_d_c_engine_1_1_system" prot="public" virt="non-virtual">DCEngine::System</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a7b3a7af59f657d615f3497ded366b12f" prot="private" static="no" mutable="no">
        <type>GLFWwindow *</type>
        <definition>GLFWwindow* DCEngine::Systems::WindowGLFW::_window</definition>
        <argsstring></argsstring>
        <name>_window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="65" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a364fa758a99c160fcc795af65e5b1391" prot="private" static="no" mutable="no">
        <type>const GLuint</type>
        <definition>const GLuint DCEngine::Systems::WindowGLFW::_width</definition>
        <argsstring></argsstring>
        <name>_width</name>
        <initializer>= 800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="67" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a01bd7c71d591db2dc1a9a2a5f74fb68c" prot="private" static="no" mutable="no">
        <type>const GLuint</type>
        <definition>const GLuint DCEngine::Systems::WindowGLFW::_height</definition>
        <argsstring></argsstring>
        <name>_height</name>
        <initializer>= 600</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="68" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a31c2b6c1fd1eedebebbd46e93a25fa78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DCEngine::Systems::WindowGLFW::WindowGLFW</definition>
        <argsstring>()</argsstring>
        <name>WindowGLFW</name>
        <briefdescription>
<para>Constructor for the <ref refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w" kindref="compound">WindowGLFW</ref> class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="35" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.cpp" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1ac7ae83e32fa53469db47d007725491f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void DCEngine::Systems::WindowGLFW::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <reimplements refid="class_d_c_engine_1_1_system_1aaa724b7d16242b08dd82a16bdd1e62e4">Initialize</reimplements>
        <briefdescription>
<para>Initializes GLFW, configuring the window before creating it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="36" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.cpp" bodystart="45" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1aacb64154bec4046bb18105a886e140af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void DCEngine::Systems::WindowGLFW::Update</definition>
        <argsstring>(float dt)</argsstring>
        <name>Update</name>
        <reimplements refid="class_d_c_engine_1_1_system_1a7a9a1fc31f9f64bd665253c330dff8f2">Update</reimplements>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Updates the viewport, then polls window/input events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="37" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.cpp" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1abeadd8d68952d364d9753b3b05941e83" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void DCEngine::Systems::WindowGLFW::Terminate</definition>
        <argsstring>()</argsstring>
        <name>Terminate</name>
        <reimplements refid="class_d_c_engine_1_1_system_1a236b4262ba170b5e218f8091245bc7c3">Terminate</reimplements>
        <briefdescription>
<para>As soon as the game loop is exited, cleans/deletes all allocated resources. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="38" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.cpp" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a09d7b716caed459967d25d527c950f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DCEngine::Systems::WindowGLFW::StartFrame</definition>
        <argsstring>()</argsstring>
        <name>StartFrame</name>
        <briefdescription>
<para>At the start of each render iteration clears the screen. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="41" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.cpp" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a35fda5b7925aa2c54d07b731c5b8ec3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DCEngine::Systems::WindowGLFW::EndFrame</definition>
        <argsstring>()</argsstring>
        <name>EndFrame</name>
        <briefdescription>
<para>Ends the current frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="42" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.cpp" bodystart="128" bodyend="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1acb8d339a74359c8e8b4d1fec164006e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DCEngine::Systems::WindowGLFW::PollEvents</definition>
        <argsstring>()</argsstring>
        <name>PollEvents</name>
        <briefdescription>
<para>Polls events. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="46" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.cpp" bodystart="156" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1af726ff44b67f486479d701f6997af4e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DCEngine::Systems::WindowGLFW::ViewportUpdate</definition>
        <argsstring>()</argsstring>
        <name>ViewportUpdate</name>
        <briefdescription>
<para>Tells OpenGL the size of the rendering window First two parameters set the location of the lower left corner of the window. The third and fourth parameters set the width and height of the rendering window, which is the same as the GLFW window. </para>        </briefdescription>
        <detaileddescription>
<para>Behind the scenes OpenGL uses data specified via glViewport to transform the 2D coordinates it processed to coordinates on your screen. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="47" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.cpp" bodystart="147" bodyend="149"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a78eb357fd3be382681387657604c0f09" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>static auto DCEngine::Systems::WindowGLFW::KeyCallback</definition>
        <argsstring>(GLFWwindow *win, int key, int scancode, int action, int mode)</argsstring>
        <name>KeyCallback</name>
        <param>
          <type>GLFWwindow *</type>
          <declname>win</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scancode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="49" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" bodystart="49" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="17">
        <label>DCEngine::System</label>
        <link refid="class_d_c_engine_1_1_system"/>
      </node>
      <node id="16">
        <label>DCEngine::Systems::WindowGLFW</label>
        <link refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="19">
        <label>DCEngine::System</label>
        <link refid="class_d_c_engine_1_1_system"/>
      </node>
      <node id="18">
        <label>DCEngine::Systems::WindowGLFW</label>
        <link refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" line="32" column="1" bodyfile="D:/Google Drive/Digipen Institute of Technology/GAM 200/GAM200.git/DCEngine/Core/Systems/Window/WindowGLFW.h" bodystart="32" bodyend="71"/>
    <listofallmembers>
      <member refid="class_d_c_engine_1_1_system_1ad2c9bfaf50eb092b11eca44c50003792" prot="protected" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>_entities</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a01bd7c71d591db2dc1a9a2a5f74fb68c" prot="private" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>_height</name></member>
      <member refid="class_d_c_engine_1_1_system_1ab9c1e1c908ad61cdc96b2bfbf1be3387" prot="protected" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>_mask</name></member>
      <member refid="class_d_c_engine_1_1_system_1ac87c16a4ddaf36fefd3747facf817d08" prot="protected" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>_name</name></member>
      <member refid="class_d_c_engine_1_1_system_1a5edcef5d0bed27b80ed6fa7437476fb7" prot="protected" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>_type</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a364fa758a99c160fcc795af65e5b1391" prot="private" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>_width</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a7b3a7af59f657d615f3497ded366b12f" prot="private" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>_window</name></member>
      <member refid="class_d_c_engine_1_1_system_1a1a484ac0c8d5a10150154ef9b5470b79" prot="public" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>ClearEntities</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a35fda5b7925aa2c54d07b731c5b8ec3f" prot="public" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>EndFrame</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1ac7ae83e32fa53469db47d007725491f7" prot="public" virt="virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>Initialize</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a78eb357fd3be382681387657604c0f09" prot="private" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>KeyCallback</name></member>
      <member refid="class_d_c_engine_1_1_system_1ab52f759a9ebedeba5e759edb3be9e8cc" prot="public" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>Mask</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1acb8d339a74359c8e8b4d1fec164006e5" prot="private" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>PollEvents</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a09d7b716caed459967d25d527c950f28" prot="public" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>StartFrame</name></member>
      <member refid="class_d_c_engine_1_1_system_1ac0b8cac597bf207ccfd9bb60a8955e79" prot="public" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>System</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1abeadd8d68952d364d9753b3b05941e83" prot="public" virt="virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>Terminate</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1aacb64154bec4046bb18105a886e140af" prot="public" virt="virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>Update</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1af726ff44b67f486479d701f6997af4e0" prot="private" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>ViewportUpdate</name></member>
      <member refid="class_d_c_engine_1_1_systems_1_1_window_g_l_f_w_1a31c2b6c1fd1eedebebbd46e93a25fa78" prot="public" virt="non-virtual"><scope>DCEngine::Systems::WindowGLFW</scope><name>WindowGLFW</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
