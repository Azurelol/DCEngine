class MusicBackground : ZilchComponent
{	
	[Property] var PlayOnStart : Boolean = true;
	[Property] var StopOnTerminate : Boolean = false;
	[Property] var Track : String = "";
	[Property] var Volume : Real = 1.0;
	
	var Instance : SoundInstance = null;

    function Initialize()
    {
    	// If we were given a default track, and we are told to start, begin playing on initialize.
    	if ( (this.Track != "") && (this.PlayOnStart) )
    	{
			this.Instance = this.Space.SoundSpace.PlayCue(this.Track);
    	}
		
		this.ChangeVolume(this.Volume);
    }

	function Terminate()
	{	
		Console.WriteLine("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA `this.Name` is terminating!");
		
		//if (this.Instance != null)
		//{	
			//this.Instance.Stop(StopMode.Immediate);
		//}
	}

    function Pause()
	{
		if (this.Instance != null)
		{
			this.Instance.Pause();
		}
    }

	function Resume()
	{
		if (this.Instance != null)
		{
			this.Instance.Resume();
		}
    }    

    function ChangeVolume(vol : Real)
	{
		// If the instance is null, it doesn't matter if the given value is valid or not.
		if (this.Instance == null)
		{
			return;
		}
		
    	// Safety check; valid volumes are on range [0, 1]
    	vol = this.TruncateVolume(vol);

    	// Set the volume to a provided value.
		this.Instance.InterpolateVolume(vol, 0);
    }

    function TruncateVolume(vol : Real) : Real
    {
    	// FMOD volume ranges are [0.0, 1.0]
    	if (vol < 0.0)
   		{
   			return 0.0; 
   		}
   		else if (1.0 < vol)
   		{
   			return 1.0;
   		}

   		// Volume is fine. Return as is.
   		return vol;
    }
}
