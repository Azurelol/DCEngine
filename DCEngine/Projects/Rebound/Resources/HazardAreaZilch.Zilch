class HazardAreaZilch : ZilchComponent
{
    sends DamageEvent : DamageEvent;
    
    //var ObjectsInContact : Array[Cog] = null;
    [Property]
    var DamageInterval : Real = 0.5;
    [Property]
    var Damage : Real = 3;
    var Timer : Real = 0;
    
    function Initialize()
    {
        Daisy.Connect(this.Space, DaisyEvent.LogicUpdate, this.OnLogicUpdate);
        Daisy.Connect(this.Owner, DaisyEvent.CollisionStarted, this.OnCollisionStartedEvent);
        Daisy.Connect(this.Owner, DaisyEvent.CollisionEnded, this.OnCollisionEndedEvent);
    }

    function OnLogicUpdate(event : LogicUpdate)
    {
        this.Timer += event.Dt;
        if(this.Timer >= this.DamageInterval)
        {
            foreach(var obj in this.ObjectsInContact)
            {
                var ev = DamageEvent();
                ev.Source = this.Owner;
                ev.Damage = this.Damage;
                obj.DispatchEvent("DamageEvent", ev);
            }
            this.Timer = 0;
        }
    }
    
    function OnCollisionStartedEvent(event : CollisionStarted)
    {
        ObjectsInContact.Push(event.OtherObject);
    }

    function OnCollisionEndedEvent(event : CollisionEnded)
    {
        ObjectsInContact.RemoveAll(event.OtherObject);
    }
}
