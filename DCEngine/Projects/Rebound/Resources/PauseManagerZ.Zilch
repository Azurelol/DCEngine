class ReportSpace : ZilchEvent
{
	var MainSpace : Space = null;
	sends ReportSpace : ReportSpace;
}

class PauseEvent : ZilchEvent
{
	var PauseState : Boolean = false;
	sends PauseEvent : PauseEvent;
}

class PauseManagerZ : ZilchComponent
{
	var Paused : Boolean;
	var PauseSpace : Space;

	[Property]
	var PauseLevelName : String = "";

    function Initialize()
    {
        Daisy.Connect(Daisy.Keyboard, DaisyEvent.KeyUp, this.OnKeyUp);
        Daisy.Connect(this.Space, DaisyEvent.PauseEvent, this.OnPauseEvent);

        this.Paused = false;
    }

    function OnPauseEvent(event : PauseEvent)
    {
    	if(event.PauseState == true)
    	{
    		this.LoadPauseMenu();
    	}
    	else
    	{
    		this.DestroyPauseMenu();
    	}
    }

    function OnKeyUp(event : KeyUp)
    {
    	if(event.Key == Keys.Escape && !this.Paused)
    	{
    		var pEvent = PauseEvent();
    		pEvent.PauseState = true;
    		this.Space.Dispatch(DaisyEvent.PauseEvent, pEvent);
    	}
    	else if(event.Key == Keys.Escape)
    	{
    		this.Space.Dispatch(DaisyEvent.PauseEvent, PauseEvent());
    	}
    }

    function LoadPauseMenu()
    {
    	if(this.PauseLevelName == "")
    	{
    		return;
    	}

    	this.Paused = true;
    	this.Space.TimeSpace.Paused = true;
    	this.PauseSpace = this.GameSession.CreateSpace("PauseSpace", true);
    	this.PauseSpace.LoadLevel(this.PauseLevelName);

    	var spReport = ReportSpace();
    	spReport.MainSpace = this.Space;
    	this.PauseSpace.Dispatch(DaisyEvent.ReportSpace, spReport);
    }

    function DestroyPauseMenu()
    {
    	if(this.PauseLevelName == "")
    	{
    		return;
    	}

    	this.PauseSpace.Destroy();
    	this.Paused = false;
    	this.Space.TimeSpace.Paused = false;
    }
}
