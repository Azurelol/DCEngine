class DialogText : ZilchComponent
{
    [Property]
    var SystemDelay : Real = 0.0;
	
    [Property]
    var FadeInTime : Real = 3.0;
	
    [Property]
    var MessageTime : Real = 5.0;
	
    [Property]
    var ScaleTimeWithSize : Boolean = true;
	
    [Property]
    var TimePerChar : Real = 0.5;
	
	[Property]
	var Message : String = "what";
	
	[Property]
	var WordWrap : Integer = 15;
	
	[Property]
    var FadeEase : Ease = Ease.Linear;
	
	[Property]
	var DeleteAfterTime : Boolean = true;
	
	[Property]
	var TimeToDelete : Real = 10.0;
	
	//[Property]
	//var ArbitraryXShift : Integer = -5;
	
	[Property]
	var AshaVoiceColor : Real4 = Real4(0,1,0,1);
	[Property]
	var DudeVoiceColor : Real4 = Real4(1,0,0,1);
	
	var XShiftPerChar : Real;
	var CurTime : Real = 0.0;
	var Finished : Boolean = false;
	var ThePlace : Integer = 0;
	var CurSpeaker : Speaker = Speaker.Dude;
	
    function Initialize()
    {
		var dialogSpeaker = this.Space.FindObjectByName("DialogSpeaker");
		if(this.CurSpeaker == Speaker.Asha)
		{
			dialogSpeaker.SpriteText.Text = "Asha";
			dialogSpeaker.SpriteText.Color = this.AshaVoiceColor;
			this.Owner.SpriteText.Color = this.AshaVoiceColor;
		}
		else if(this.CurSpeaker == Speaker.Dude)
		{
			dialogSpeaker.SpriteText.Text = "Dude";
			dialogSpeaker.SpriteText.Color = this.DudeVoiceColor;
			this.Owner.SpriteText.Color = this.DudeVoiceColor;
		}
		this.XShiftPerChar = 4.0/10;
		this.Owner.SpriteText.Text = "";
		this.Owner.SpriteText.WordWrap = this.WordWrap;
		this.SetMessage(this.Message);
        Daisy.Connect(this.Space, DaisyEvent.LogicUpdate, this.OnLogicUpdate);
        Daisy.Connect(this.Owner, DaisyEvent.MessageEvent, this.OnMessageEvent);
		//this.SayMessage();
    }

    function OnLogicUpdate(event : LogicUpdate)
    {
		var dialogBackground = this.Space.FindObjectByName("DialogBackground");
		var xShift : Real = 0;
		//if(this.WordWrap > this.Message.Count)
		//{
		//	xShift = this.XShiftPerChar*this.WordWrap;
		//}
		//else
		//{
		//	xShift = this.XShiftPerChar*this.Message.Count;
		//}
		//this.Owner.Transform.Translation = Real3(dialogBackground.Transform.Translation.X - xShift,
		//										 dialogBackground.Transform.Translation.Y,
		//										 this.Owner.Transform.Translation.Z);
		//.Transform.Translation.Y = player.Owner.Transform.Y;
		if(this.ThePlace == this.Message.Count)
			this.Finished = true;
		this.CurTime += event.Dt;
		if(this.CurTime > this.TimeToDelete && this.DeleteAfterTime == true)
		{
			this.WipeMessage();
			this.CurTime = 0;
		}
		//if(this.Finished == true)
		//{
		//	this.Owner.SpriteText.Text = this.Message;
		//}
		//else
			this.Owner.SpriteText.Text = this.Message.SubString(0, this.ThePlace);
    }
	
	function FinishMessage()
	{
		//this.Finished = true;
		//this.ThePlace = this.Message.Count;
	}
	
	function OnMessageEvent(event : MessageEvent)
	{
		if(event.NewProperties == true)
		{
			if(this.SystemDelay != -1)
				this.SystemDelay = event.SystemDelay;
			if(this.MessageTime != -1)
				this.MessageTime = event.MessageTime;
			this.ScaleTimeWithSize = event.ScaleTimeWithSize;
			if(this.TimePerChar != -1)
				this.TimePerChar = event.TimePerChar;
			if(this.WordWrap != -1)
				this.WordWrap = event.WordWrap;
			this.FadeEase = event.FadeEase;
			this.DeleteAfterTime = event.DeleteAfterTime;
			if(this.TimeToDelete != -1)
				this.TimeToDelete = event.TimeToDelete;
			if(this.CurTime != -1)
				this.CurTime = event.CurTime;
			if(this.ThePlace != -1)
				this.ThePlace = event.ThePlace;
			
		}
		if(event.NewMessage == true)
		{
			this.SetMessage(event.Message);
		}
		this.WipeMessage();
		this.SayMessage();
	}
	
	function SetMessage(message : String)
	{
		this.Finished = false;
		this.Message = message;
		this.ThePlace = 0;
	}
	
	function SayMessage()
	{
        var masterSeq = Actions.Sequence(this.Owner.Actions);
        var masterGrp = Actions.Group(this.Owner.Actions);
		
		var background = this.Space.FindObjectByName("DialogBackground");
		
		Actions.Property(masterSeq, @background.Sprite.Color.W, 1, this.FadeInTime, this.FadeEase);
		//Actions.Delay(masterSeq, this.FadeInTime);
		
        Actions.Delay(masterSeq, this.SystemDelay);
        Actions.Delay(masterGrp, this.SystemDelay);
		
		if(this.ScaleTimeWithSize == true)
		{
			Actions.Property(masterSeq, @this.ThePlace, this.Message.Count, this.TimePerChar*this.Message.Count, this.FadeEase);
		}
		else
		{
			Actions.Property(masterSeq, @this.ThePlace, this.Message.Count, this.MessageTime, this.FadeEase);
		}
		
	}
	
	function WipeMessage()
	{
		this.Owner.SpriteText.Text = "";
		this.ThePlace = 0;
		var dialogSpeaker = this.Space.FindObjectByName("DialogSpeaker");
		if(this.CurSpeaker == Speaker.Asha)
		{
			dialogSpeaker.SpriteText.Text = "Asha";
			dialogSpeaker.SpriteText.Color = this.AshaVoiceColor;
			this.Owner.SpriteText.Color = this.AshaVoiceColor;
		}
		else if(this.CurSpeaker == Speaker.Dude)
		{
			dialogSpeaker.SpriteText.Text = "Dude";
			dialogSpeaker.SpriteText.Color = this.DudeVoiceColor;
			this.Owner.SpriteText.Color = this.DudeVoiceColor;
		}
	}
}
