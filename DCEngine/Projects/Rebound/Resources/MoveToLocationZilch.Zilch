class MoveToLocationZilch : ZilchComponent
{
    sends ToggleEvent : ToggleEvent;
    
    var RandomGenerator : Random;
    
    [Property]
    var Oscillate : Boolean = false;
    [Property]
    var CurrentlyMoving : Boolean = false;
    [Property]
    var TargetLocation : Real3;
    var StartingLocation : Real3;
    [Property]
    var MinMoveTime: Real = 1;
    [Property]
    var MaxMoveTime: Real = 1;
    [Property]
    var MinDelay: Real = 0; 
    [Property]
    var MaxDelay: Real = 0; 
     
    function Initialize()
    {
        this.RandomGenerator= new Random();
        Daisy.Connect(this.Owner, DaisyEvent.ToggleEvent, this.OnToggleEvent);
        this.StartingLocation = this.Owner.Transform.Translation;
        this.TargetLocation = this.StartingLocation - this.TargetLocation;
        if(this.CurrentlyMoving)
        {
            this.SendSelfToggleEvent();
        }
    }

    function OnLogicUpdate(event : LogicUpdate)
    {
    }
    
    function OnToggleEvent(event : ToggleEvent)
    {
        var moveTime = this.RandomGenerator.Range(this.MinMoveTime, this.MaxMoveTime);
        var delay = this.RandomGenerator.Range(this.MinDelay, this.MaxDelay);
        var seq = Actions.Sequence(this.Owner.Actions);
        Actions.Delay(seq, delay);
        Actions.Property(seq, @this.Owner.Transform.Translation, this.TargetLocation, moveTime, Ease.Linear);
        var temp = this.TargetLocation;
        this.TargetLocation = this.StartingLocation;
        this.StartingLocation = temp;
        if(this.Oscillate)
        {
            Actions.Call(seq, this.SendSelfToggleEvent);
        }
    }
    
    function SendSelfToggleEvent()
    {
        var ev = ToggleEvent();
        this.Owner.Dispatch("ToggleEvent", ev);

    }
}