enum FadeType { FadeIn, FadeOut }
enum TargetObject { Self, Parent }
class FadeToColorZilch : ZilchComponent
{
    sends ToggleColorEvent : ToggleColorEvent;    
    var RandomGenerator : Random;    

    [Property] var Activate : Boolean = false;
    [Property] var Target : TargetObject = TargetObject.Self; var TargetObj : Entity;    
    //[Property] var Oscillate : Boolean = false;    
    [Property] var TargetColor : Real4; var StartingColor : Real4;
    [Property] var FadeTime: Real = 1;
    [Property] var FadeVariance: Real = 0;
    [Property] var DelayTime: Real = 1; 
    [Property] var DelayVariance: Real = 0; 
     
    function Initialize()
    {
        // Set the target object
        if (this.Target == TargetObject.Parent && this.Owner.Parent != null)
            this.TargetObj = this.Owner.Parent;
        else
            this.TargetObj = this.Owner;
        // Save the starting color
        this.StartingColor = this.TargetObj.Sprite.Color;
        // Create the random generator
        this.RandomGenerator= Random();
        // Connect to events
        Daisy.Connect(this.Owner, DaisyEvent.ToggleColorEvent, this.OnToggleColorEvent);
        // If activated, toggle immediately
        if(this.Activate) this.SendSelfToggleColorEvent();
    }

    function OnLogicUpdate(event : LogicUpdate)
    {
    }
    
    function OnToggleColorEvent(event : ToggleColorEvent)
    {
		//Console.WriteLine("OnToggleColorEvent Action!");
        var fadeTime = this.RandomGenerator.Variance(this.FadeTime, this.FadeVariance);
        var delay = this.RandomGenerator.Variance(this.DelayTime, this.DelayVariance);
		
		//Console.WriteLine("`this.Name` is creating sequence!");
        var seq = Actions.Sequence(this.Owner.Actions);
        Actions.Delay(seq, delay);
        Actions.Property(seq, @this.TargetObj.Sprite.Color, this.TargetColor, fadeTime, Ease.Linear);
        
        var temp = this.TargetColor;
        this.TargetColor = this.StartingColor;
        this.StartingColor = temp;
        //if(this.Oscillate) Actions.Call(seq, this.SendSelfToggleColorEvent);
		//Console.WriteLine("`this.Name` is done creating sequence!");        
    }
    
    function SendSelfToggleColorEvent()
    {
        var ev = ToggleColorEvent();
        this.Owner.Dispatch("ToggleColorEvent", ev);

    }
}